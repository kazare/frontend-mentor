{"version":3,"sources":["Error.js","Nav.js","Filters.js","Country.js","App.js","index.js"],"names":["Error","to","className","class","Nav","useState","theme","setTheme","themeSwitcher","e","root","document","documentElement","getAttribute","setAttribute","onClick","Filters","setQuery","search","setSearch","setRegion","type","value","onChange","target","onKeyDown","key","placeholder","getElementsByClassName","classList","toggle","options","querySelectorAll","addEventListener","this","contains","parentNode","querySelector","remove","add","dataset","closest","textContent","data-value","Country","names","country","numWithCommas","getCountry","langauges","currencies","borders","alphaCodeToName","map","border","index","push","filter","name","includes","alpha3Code","languages","forEach","lang","money","src","flag","alt","nativeName","population","region","subregion","capital","topLevelDomain","join","data-code","App","countries","setCountries","query","results","setResults","resultsReady","setResultsReady","countryCode","setCountryCode","setCountry","countryReady","setCountryReady","setNames","namesReady","setNamesReady","getCountriesAll","a","fetch","method","then","data","json","getResults","ok","catch","err","console","log","getRegion","code","getNames","useEffect","num","toLocaleString","Home","Results","Countries","path","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fdcc92e8.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\r\n\r\nconst Error = () => {\r\n   return (\r\n      <div>\r\n         <Link to=\"/\"><button className=\"back-button btn\"><i class=\"fas fa-long-arrow-alt-left\"></i> Back</button></Link>\r\n         <h1>Oops! Page not found!</h1>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Error;","import { useState } from 'react';\r\nimport './Nav.css';\r\n\r\nconst Nav = () => {\r\n   const [theme, setTheme] = useState('light');\r\n\r\n   const themeSwitcher = (e) => {\r\n      const root = document.documentElement;\r\n      if (root.getAttribute('data-theme') === 'dark') {\r\n         root.setAttribute('data-theme', 'light');\r\n         setTheme('light');\r\n\r\n      } else {\r\n         root.setAttribute('data-theme', 'dark');\r\n         setTheme('dark');\r\n      }\r\n   };\r\n\r\n   return (\r\n      <header>\r\n         <h1>Where in the world?</h1>\r\n         {theme === 'light' ?\r\n            <div className=\"theme-toggle btn\" onClick={themeSwitcher}><i class=\"fas fa-moon\"></i> <span className=\"theme-label\">Dark Mode</span></div> :\r\n            <div className=\"theme-toggle btn\" onClick={themeSwitcher}><i class=\"fas fa-sun\"></i> <span className=\"theme-label\">Light Mode</span>\r\n            </div>}\r\n      </header>\r\n   );\r\n};\r\n\r\n\r\nexport default Nav;","import './Filters.css';\r\n\r\nconst Filters = ({ setQuery, search, setSearch, setRegion }) => {\r\n   const handleKeyDown = (e) => {\r\n      if (e.key === 'Enter') {\r\n         setQuery(search);\r\n         setSearch('');\r\n      }\r\n   };\r\n\r\n   const updateSearch = (e) => {\r\n      setSearch(e.target.value);\r\n   };\r\n\r\n   const handleSelect = () => {\r\n      document.getElementsByClassName('custom-options')[0].classList.toggle('open');\r\n\r\n      const options = document.querySelectorAll('.custom-option');\r\n\r\n      for (const option of options) {\r\n         option.addEventListener('click', function () {\r\n            if (!this.classList.contains('selected')) {\r\n               this.parentNode.querySelector('.custom-option.selected').classList.remove('selected');\r\n               this.classList.add('selected');\r\n               setRegion(this.dataset.value);\r\n               this.closest('.custom-select').querySelector('.custom-select__trigger span').textContent = this.textContent;\r\n            }\r\n         })\r\n      }\r\n   };\r\n\r\n   return (\r\n      <div className=\"filters\">\r\n         <div className=\"search\">\r\n            <i class=\"fas fa-search\"></i>\r\n            <input key=\"inputkey\" className=\"input\" type=\"text\" value={search} onChange={updateSearch} onKeyDown={handleKeyDown} placeholder=\"Search for a country...\" />\r\n         </div>\r\n\r\n\r\n         <div class=\"custom-select-wrapper\">\r\n            <div class=\"custom-select\" onClick={handleSelect}>\r\n               <div class=\"custom-select__trigger\"><span>Filter By Region </span>\r\n                  <div class=\"arrow\"><i class=\"fas fa-chevron-down\"></i></div>\r\n               </div>\r\n\r\n               <div class=\"custom-options\">\r\n                  <span class=\"custom-option selected\" data-value=\"All\">🌐 All</span>\r\n                  <span class=\"custom-option\" data-value=\"Africa\">🌍 Africa</span>\r\n                  <span class=\"custom-option\" data-value=\"Americas\">🌎 Americas</span>\r\n                  <span class=\"custom-option\" data-value=\"Asia\">🌏 Asia</span>\r\n                  <span class=\"custom-option\" data-value=\"Europe\">🌍 Europe</span>\r\n                  <span class=\"custom-option\" data-value=\"Oceania\">🌏 Oceania</span>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Filters;","import { Link } from 'react-router-dom'\r\nimport './Country.css';\r\n\r\nconst Country = ({ names, country, numWithCommas, getCountry, }) => {\r\n\r\n   let langauges = [];\r\n   let currencies = [];\r\n   let borders = [];\r\n   let alphaCodeToName = [];\r\n\r\n   country.borders.map((border, index) => {\r\n      return borders.push(border);\r\n   })\r\n\r\n   alphaCodeToName = names.filter(name => borders.includes(name.alpha3Code));\r\n\r\n   country.languages.forEach((lang) => {\r\n      langauges.push(lang.name);\r\n   })\r\n\r\n   country.currencies.forEach((money) => {\r\n      currencies.push(`${money.name}`);\r\n   })\r\n\r\n   return (\r\n      <div key='countrykey' className=\"details-wrapper\">\r\n         <Link to=\"/\"><button className=\"back-button btn\"><i class=\"fas fa-long-arrow-alt-left\"></i> Back</button></Link>\r\n\r\n         <div className=\"country-details\">\r\n            <div className=\"flag-container\"><img className=\"flag\" src={country.flag} alt={`Flag of ${country.name}`} /></div>\r\n\r\n            <div className='details'>\r\n               <h2>{country.name}</h2>\r\n               <ul className=\"details-info\">\r\n                  <li><span className=\"label\">Native Name: </span>{country.nativeName}</li>\r\n                  <li><span className=\"label\">Population: </span>{numWithCommas(country.population)}</li>\r\n                  <li><span className=\"label\">Region: </span>{country.region}</li>\r\n                  <li><span className=\"label\">Sub Region: </span>{country.subregion}</li>\r\n                  <li><span className=\"label\">Capital: </span>{country.capital}</li>\r\n                  <li><span className=\"label\">Top Level Domain: </span>{country.topLevelDomain}</li>\r\n                  <li><span className=\"label\">Currencies: </span>{currencies.join(\", \")}</li>\r\n                  <li><span className=\"label\">Languages: </span>{langauges.join(\", \")}</li>\r\n               </ul>\r\n\r\n               <div className=\"border-wrapper\">\r\n                  <span className=\"label\">Border Countries: </span>\r\n                  <div className=\"borders\"></div>\r\n                  {alphaCodeToName.map((border, index) => {\r\n                     return <div className=\"border btn\" value={index} data-code={border.alpha3Code} onClick={() => getCountry(border.alpha3Code)}>{border.name}</div>;\r\n                  })}\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Country;","import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport './App.css';\nimport Error from './Error';\nimport Nav from './Nav';\nimport Filters from './Filters';\nimport Country from './Country';\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [query, setQuery] = useState('');\n  const [results, setResults] = useState([]);\n  const [resultsReady, setResultsReady] = useState(false);\n  const [region, setRegion] = useState('');\n  const [countryCode, setCountryCode] = useState('USA');\n  const [country, setCountry] = useState({});\n  const [countryReady, setCountryReady] = useState(false);\n  const [names, setNames] = useState({});\n  const [namesReady, setNamesReady] = useState(false);\n\n  const getCountriesAll = async () => {\n    await fetch('https://restcountries.eu/rest/v2/all', {\n      method: 'GET'\n    })\n      .then(data => data.json())\n      .then((results) => {\n        setCountries(results);\n      });\n  };\n\n  const getResults = async () => {\n    await fetch(`https://restcountries.eu/rest/v2/name/${query}`, {\n      method: 'GET'\n    })\n      .then(data => {\n        if (!data.ok) {\n          throw new Error('Something went wrong');\n        } else {\n          return data.json();\n        }\n      })\n      .then((results) => {\n        setResultsReady(true);\n        setResults(results);\n\n      })\n      .catch((err) => {\n        console.log(err);\n      })\n  };\n\n  const getRegion = async () => {\n    await fetch(`https://restcountries.eu/rest/v2/region/${region}`, {\n      method: 'GET'\n    })\n      .then(data => data.json())\n      .then((results) => {\n        setResults(results);\n      });\n  };\n\n  const getCountry = async (code) => {\n    setCountryCode(code);\n\n    await fetch(`https://restcountries.eu/rest/v2/alpha/${code}`, {\n      method: 'GET'\n    })\n      .then(data => data.json())\n      .then((results) => {\n        setCountry(results);\n        setCountryReady(true);\n      });\n  };\n\n  const getNames = async () => {\n    await fetch(`https://restcountries.eu/rest/v2/all?fields=alpha3Code;name;alt`, {\n      method: 'GET'\n    })\n      .then(data => data.json())\n      .then((results) => {\n        setNames(results);\n        setNamesReady(true);\n      });\n  };\n\n  useEffect(() => {\n    getCountriesAll();\n\n    getCountry(countryCode);\n    getNames();\n\n  }, []);\n\n  useEffect(() => {\n    if (query === \"\") {\n      setResultsReady(false);\n      return null;\n    }\n    getResults();\n    setQuery('');\n    setResultsReady(false);\n  }, [query]);\n\n  useEffect(() => {\n    if (search === \"\") {\n      setResultsReady(false);\n      return null;\n    }\n  }, [search]);\n\n  useEffect(() => {\n    if (region === \"All\" || region === \"\") {\n      setResultsReady(false);\n      getCountriesAll();\n      return null;\n    }\n    setResultsReady(true);\n    getRegion();\n  }, [region])\n\n  const numWithCommas = (num) => {\n    return num.toLocaleString();\n  };\n\n  const Home = () => {\n    return (\n      <div>\n        { resultsReady ? <Results /> : <Countries />}\n      </div>\n    );\n  };\n\n  const Countries = () => {\n    return (\n      <div className=\"countryWrapping\">\n\n        {countries.map((country, index) => {\n          return (\n            <Link to=\"/details\">\n              <div className=\"country btn\" key={index} data-code={country.alpha3Code} onClick={() => getCountry(country.alpha3Code)}>\n                <img className=\"flag\" src={country.flag} alt={`Flag of ${country.name}`} />\n                <div className=\"info\">\n                  <h2 className=\"name\">{country.name}</h2>\n                  <div><span className=\"label\">Population: </span> {numWithCommas(country.population)}</div>\n                  <div><span className=\"label\">Region: </span>{country.region}</div>\n                  <div><span className=\"label\">Capital: </span>{country.capital}</div>\n                  <div className='view-button btn'>View <i class=\"fas fa-search-plus\"></i></div>\n                </div>\n\n              </div>\n            </Link>\n          );\n        })}\n\n      </div>\n    );\n  };\n\n  const Results = () => {\n    return (\n      <div className=\"countryWrapping\">\n        {results.map((country, index) => {\n          return (\n            <Link to=\"/details\">\n              <div className=\"country btn\" key={index} data-code={country.alpha3Code} onClick={() => getCountry(country.alpha3Code)}>\n                <img className=\"flag\" src={country.flag} alt={`Flag of ${country.name}`} />\n                <div className=\"info\">\n                  <h2 className=\"name\">{country.name}</h2>\n                  <div><span className=\"label\">Population: </span> {numWithCommas(country.population)}</div>\n                  <div><span className=\"label\">Region: </span>{country.region}</div>\n                  <div><span className=\"label\">Capital: </span>{country.capital}</div>\n                </div>\n              </div>\n            </Link>\n          );\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Nav />\n\n        <main>\n          <Switch>\n            <Route path='/details'>\n              {countryReady && namesReady ?\n                <Country\n\n                  names={names}\n                  country={country}\n                  numWithCommas={numWithCommas}\n                  getCountry={getCountry}\n\n                /> : <Error />}\n            </Route>\n\n            <Route path='/' exact>\n              <Filters\n                setQuery={setQuery}\n                search={search}\n                setSearch={setSearch}\n                setRegion={setRegion}\n              />\n              <Home />\n            </Route>\n\n            <Route component={Error} />\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}